[tool.poetry]
name = "timeless"
version = "0.2.4"
description = "Datetime for people in a hurry."
authors = ["ericmiguel <ericmiguel@id.uff.br>"]
keywords = ["datetime", "datetime for humans"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/ericmiguel/timeless"
include = ["timeless/py.typed"]

[tool.mypy]
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
show_error_codes = true
warn_return_any = true

[[tool.mypy.overrides]]
module = ["pandas"]
ignore_missing_imports = true

[tool.poetry.dependencies]
python = "^3.8"
python-dateutil = "^2.8.2"
"backports.zoneinfo" = { version = "^0.2.1", python = "<=3.8" }
tzdata = { version = "^2022.6", markers = "sys_platform == 'win32'" }
pandas = { version = "^1.5.1", optional = true }

[tool.poetry.extras]
converters = ["pandas"]

[tool.poetry.group.dev.dependencies]
flake8-pyproject = "^1.1.0.post0"
isort = "^5.8.0"
black = "^22.9.0"
mypy = "^0.902"
pydocstyle = "^6.1.1"
pre-commit = "^2.13.0"
pytest = "6.0.0"
pytest-cov = "^3.0.0"
types-requests = "^2.25.0"
types-python-dateutil = "^0.1.4"
mkdocs = "^1.2.3"
mkdocs-material = "^8.1.10"
autoflake = "^1.7.7"

[tool.isort]
profile = "black"
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
src_paths = ["poetry", "tests"]
filter_files = true
known_first_party = "poetry"

[tool.flake8]
max-line-length = 88
max-complexity = 10
exclude = [
    ".venv",
    ".git",
    "__pycache__",
    "*.egg-info",
    ".pytest_cache",
    ".mypy_cache"
]
ignore = [  # alertas e erros por conta do black
    "E501", # linha longa
    "E203", # espaço antes de ':'
    "E225", # sem espaço ao redor de operadores 
    "W503", # quebra de linha antes de um operador binário
    "W504"  # quebra de linha após um operador binário line
]

[tool.pydocstyle]
convention = "numpy"
add-ignore = "D100,D203"
match = '(?!tests).*\.py'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
